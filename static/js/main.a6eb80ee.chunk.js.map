{"version":3,"sources":["components/Section/Section.module.css","components/Input/Input.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Button/Button.module.css","components/Section/Section.js","components/Button/Button.js","components/Input/Input.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Button","label","formButton","type","Input","name","labelName","value","onChange","nameLabel","contactsInput","Form","state","number","nameInputId","shortid","generate","numberInputId","handleSubmit","e","preventDefault","props","onSubmit","handleChange","currentTarget","setState","reset","this","pattern","required","id","Component","ContactsList","contacts","onDeleteContact","map","contactsListItem","contactListBtn","onClick","protoTypes","PropTypes","array","string","func","isRequired","Filter","filterLabel","filterInput","App","filter","formSubmithandle","data","find","contact","alert","visibleContacts","normalizedFilter","toLowerCase","includes","changeFilter","target","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6eb80ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1cbHJ\",\"title\":\"Section_title__1Rlpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameLabel\":\"Input_nameLabel__3kLYT\",\"contactsInput\":\"Input_contactsInput__13-_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListBtn\":\"ContactsList_contactListBtn__3Ugw5\",\"contactsListItem\":\"ContactsList_contactsListItem__3MF21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__n9nSb\",\"filterInput\":\"Filter_filterInput__SFYyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"Button_formButton__YgBsV\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ label }) {\n  return (\n    <button className={s.formButton} type=\"submit\">\n      {label}\n    </button>\n  );\n}\nButton.propTypes = {\n  label: PropTypes.string,\n};\n","import s from './Input.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Input({ name, type, labelName, value, onChange }) {\n  return (\n    <label className={s.nameLabel}>\n      {labelName}\n      <input\n        className={s.contactsInput}\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  labelName: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport Button from 'components/Button';\nimport Input from 'components/Input';\nimport shortid from 'shortid';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n  // handleSubmit = e => {\n\n  // }\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Input\n          labelName=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n          id={this.nameInputId}\n        />\n        <Input\n          labelName=\"Number\"\n          name=\"number\"\n          type=\"tel\"\n          value={this.state.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n          id={this.nameInputId}\n        />\n        <Button label=\"Add contact\" />\n      </form>\n    );\n  }\n}\nexport default Form;\n","import s from './ContactsList.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactsListItem}>\n          <span> {name}: </span>\n          <span>{number}</span>\n          <button\n            className={s.contactListBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.protoTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmithandle = data => {\n    data.id = shortid.generate();\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, data],\n      };\n    });\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name === data.name,\n    );\n\n    if (duplicateName) {\n      alert(`${data.name} is already on contacts`);\n      return;\n    }\n    if (data.name === '') {\n      alert(`please, write the name from the contacts`);\n      return;\n    }\n    if (data.number === '') {\n      alert(`please, write the name from the number`);\n    }\n  };\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  changeFilter = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.formSubmithandle} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactsList\n            contacts={this.visibleContacts()}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}